import random

def get_computer_choice():
    # Randomly select rock, paper, or scissors for the computer
    return random.choice(["rock", "paper", "scissors"])

def determine_winner(user_choice, computer_choice):
    # Determine the winner based on the rules of Rock-Paper-Scissors
    if user_choice == computer_choice:
        return "tie"
    elif (user_choice == "rock" and computer_choice == "scissors") or \
         (user_choice == "scissors" and computer_choice == "paper") or \
         (user_choice == "paper" and computer_choice == "rock"):
        return "user"
    else:
        return "computer"

def main():
    user_score = 0
    computer_score = 0

    print("Welcome to Rock-Paper-Scissors Game!")
    while True:
        # Prompt the user to choose rock, paper, or scissors
        user_choice = input("Choose rock, paper, or scissors (or type 'quit' to exit): ").lower()
        
        if user_choice == "quit":
            print("Thanks for playing!")
            break
        if user_choice not in ["rock", "paper", "scissors"]:
            print("Invalid choice. Please try again.")
            continue

        # Get computer's choice and determine the winner
        computer_choice = get_computer_choice()
        print(f"You chose: {user_choice}")
        print(f"Computer chose: {computer_choice}")
        
        # Check the result and update scores
        winner = determine_winner(user_choice, computer_choice)
        if winner == "user":
            print("You win this round!")
            user_score += 1
        elif winner == "computer":
            print("Computer wins this round!")
            computer_score += 1
        else:
            print("It's a tie!")

        # Display the score
        print(f"Score -> You: {user_score} | Computer: {computer_score}\n")
        
        # Ask if the user wants to play again
        play_again = input("Do you want to play another round? (yes/no): ").lower()
        if play_again != "yes":
            print("Thanks for playing!")
            break

if __name__ == "__main__":
    main()
